session & cookie

Flask 中的
	1.cookie
		1.什么是cookie
			cookie 是一种数据存储技术，
			将一段文字保存在客户端（浏览器）的一种技术，并可以长时间保存
		2.cookie的使用场合
			1.记住密码（明文显示）
			2.记住搜索关键词
		3.在Flask中使用 cookie 
			1.使用 响应对象 保存cookie到客户端
				响应对象：（两种方法：）
					1. resp = make_response('响应字符串')
					2. resp = redirect('地址')
				响应对象.set_cookie(key, value,max_age)
					key:保存的cookie的名称
					value:保存的cookie的值
					max_age:最大保存时间，超过时间则不能取出，以秒s为单位的数字
			2.获取 cookie 的数据
				每次向服务器发送请求时，都会把cookie中的数据封装到request中带到服务器
				request.cookies
					request.cookies['key']
					request.cookies.get('key')
	2.session
		1.什么是session
			session - 回话
			session 是保存在服务器，为每个浏览器所开辟的一段空间
		2.session 在 Flask 中的实现
			1.配置：SECRET-KEY
				app.config['SECRET_KEY']="YOUR GUESS"
			2.使用 session (存储的是字符串)
				from flask import session 
				1.向session 中保存数据
					session['key'] = value
				2.从session 中获取数据
					value = session['key']
				3.从session 中删除数据
					del session['key']
			3.session 与 cookie 的异同
				相同：都能够保存数据
				不同点：
					1.保存地方不同
						session：保存在服务器上
						cookie：保存在浏览器上
					2.保存的时长不同
						session：临时性保存数据
						cookie：可以永久性保存
					3.安全性问题
						session：安全级别较高
						cookie：安全级别较低
	
******************************************************************

Django 中的cookies 与 session

2.cookies 在 Django 中的实现
	1.django 中使用 cookies
		1.设置cookies的值
			语法：
				响应对象.set_cookie(key,value,expires)
					key:cookie的名字
					value:cookie的值
					expires:保存时间，以s为单位
				ex:
					响应对象.set_cookie('uname','tom',60*60*24*365)
			响应对象:
				1.HttpResponse
					resp = HttpResponse("给客户端的一句话")
					resp.set_cookie('key','value',expires)
					return resp
				2.render()
					resp = render(request,'xxx.html',locals())
					resp.set_cookie('key','value',expires)
					return resp
				3.HttpResponseRedirect / redirect
					resp = redirect('/地址/')
					resp.set_cookie('key','value',expires)
					return resp
		2.获取cookies的值
			通过 request.COOKIES 获取当前站点下所有的cookies的信息
			request.COOKIES:{'username': 'Wang Wc'}
3.session 在 Django 中的实现
	1.设置 session 的值
		request.session['key'] = value
	2.获取 session 的值 
		value = request.session[key]
		value = request.session.get('key')
	3.删除 session 的值
		del request.session['key']

	4.在 settings.py中，设置session的相关设置
		1.SESSION_COOKIE_AGE
			作用：设置 sessionID在cookies中的保存时间
			ex:
				SESSION_COOKIE_AGE = 60*60*24
		2.SESSION_EXPIRE_AT_BROWSER_CLOSE
			作用：设置关闭浏览器时则清空服务器上对应的session空间
			ex:
				SESSION_EXPIRE_AT_BROWSER_CLOSE = True

