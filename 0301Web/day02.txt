
复习：
1. 文档基本结构
	<!doctype html>
	<html>
		<head>
			<title></title>
			<meta charset="utf-8">
		</head>
		<body>
			网页主体
		</body>
	</html>
2. 常用标签
	1. 标题标签 h1 - h6
	2. 段落标签 p
	3. 加粗 b 斜体 i 下划线 u 删除线 s 上标 sup 下标 sub
	4. 换行 br 水平线 hr
	5. 块分区 div 行内分区 span
	6. 有序列表 ol 无序列表 ul 列表项 li
		<ol>
			<li>
				<ul>
					<li></li>
				</ul>
			</li>
		</ol>
	7. 图片 <img src="">
	8. 标签分类
		1. 块元素 h1 - h6 p div ul ol li
			特点 独占一行，不予其他元素共行显示
		2. 行内元素 span i b u s sub sup
			特点 可以与其他元素共行显示
-------------------------------------------------
1. 超链接标签
	1. 什么是超链接标签
		能够实现从当前文件跳转到其他文件的标签
	2. 语法
		<a>超链接文本</a>
		标签属性 ：
			1. href :必填属性，指定链接地址，以路径形式给出,#表示当前页，不会发生页面刷新操作，如果属性为"",也表示当前页，但是包含了网络请求，相当于刷新页面。
			2. target :可选属性，设置目标文件的打开方式
				属性值 ：
					1. _self :默认值，表示在当前窗口打开
					2. _blank :表示新建窗口打开
	3. 锚点链接
		链接到当前文件的指定位置
		语法 ：
			1. 设置锚点
				<a name="anchor1"></a>
			2. 设置跳转
				<a href="#anchor1">早年经历</a>
2. 表格
	1. 语法
		1. 标签介绍
			表格标签 ：<table></table>
			行 标 签 ：<tr></tr> ->table row
			单元格标签 ：<td></td> ->table data
		2. 创建顺序
			1. 创建表格标签
			2. 在表格标签中嵌套行标签，每一个 tr 就代表一行
			3. 在行标签中创建单元格标签，用来存放数据
			et :
				<table>
					<tr>
						<td>姓名</td>
						<td>年龄</td>
						<td>性别</td>
					</tr>
				</table>
	2. 标签属性
		1. table 属性
			1. border ：设置边框，取值以px为单位的数值（px可以省略）
			2. width ：设置宽度
			3. height ：设置高度
			4. align ：设置表格在其父元素中的水平对齐方式
			5. cellpadding : 设置单元格的内边距（内容与边框之间的距离），取值为px单位的数值
			6.  cellspacing : 设置单元格的外边距（单元格与单元格之间的距离，或者单元格与表格边框之间的距离），取值像素为单位的数值
			7. bgcolor : 设置表格的背景颜色，取值可以是英文的颜色名称
		2. tr 标签属性
			1. bgcolor : 设置当前行的背景颜色
			2. align ：设置当前行中内容的水平对齐方式
				取值 ： left / center / right
			3. valign :设置当前行内容的垂直对齐方式
				取值 ：top / middle / bottom,默认垂直居中
		3. td 标签属性
			1. width 设置单元格的宽度
			2. height 设置单元格的高度
			3. align 单元格内容的水平对齐方式
			4. valign 单元格内容的垂直对齐方式
			5. bgcolor 单元格的背景颜色
	3. 单元格合并（重点）
		是单元格独有的属性 colspan rowspan
		1. 单元格的跨列合并
			从当前单元格的位置开始，横向向右合并几个单元格
			colspan = "3" ->跨3列进行合并(包含自身)
		2. 单元格的跨行合并
			从当前的单元格开始，纵向向下合并单元格
			rowspan = "3" ->向下跨3行合并单元格
		注意 ：一旦发生单元格合并，
			跨列合并，要删除当前行中多余的单元格
			跨行合并，要删除其后行中多余的单元格
			始终保持表格结构完整
	4. 行分组
		表格结构
		1. 行分组
			允许将表格中的一行或者是若干行划分为一组，便于管理
		2. 语法
			1. 表头行分组
				<thead>
					<tr>
						<td></td>
					</tr>
				</thead>
			2. 表尾行分组
				<tfoot>
					<tr>
						<td></td>
					</tr>
				</tfoot>
			3. 表主体信息
				<tbody>
					<tr>
						<td></td>
					</tr>
				</tbody>
			注意 ：<thead> <tfoot> <tbody>可以省略，默认情况下，所有的行都会被自动添加到 tbody 中
				如果需要手动添加行分组，建议按照 thead  tfoot tbody的顺序书写

3. 表单
	1. 用于接收用户的数据并且提交给服务器
		表单二要素
			1. form 表单元素
				收集用户信息并发送给服务器
			2. 表单控件 （重点）
				提供了能够跟用户交互的可视化组件
	2. form 元素
		1. 注意 ： form元素本身是不可见的，却不能省略，因为数据的提交功能要由 form 元素完成
		2. 语法 ：
			<form>
				表单控件
			</form>
		3. form 标签属性
			1. action 
				指定数据提交的目的地址
			2. method 
				数据请求方式 get /post 
				默认为get方式提交
				1. get （默认值）
					通常用于向服务器端获取数据
					特点 ：
						1. 提交的数据会以参数的形式拼接在URL后面
						2. 安全性较低
						3. 提交数据最大为2KB
				2. post
					将数据提交给服务器处理
					特点 ：
						1. 隐式提交，看不到提交数据
						2. 安全性较高
						3. 没有数据大小限制
	3. 表单控件（重点）
		1. 作用
			提供与用户交互的可视化组件
			注意 ： 只有放在表单元素中的表单控件才允许被提交
		2. 分类
			1. 文本框和密码框
				语法 ：
					文本框 <input type="text">
					密码框 <input type="password">
				属性 ：
					1. name 属性 定义当前控件的名称，缺少的话无法提交
					 name = "uname"
					 uname=zhangsan
					2. value 属性，要提交给服务器的值，同时也是默认显示在控件上的值
					3. maxlength 用来限制用户输入的最大字符数
					4. placeholder 用户输入之前显示在框中的提示文本
			2. 单选框和复选框
				单选按钮 <input type="radio">
				复选框   <input type="checkbox">
				属性 ：
					1. name
						定义控件名称，还起到分组的作用，一组中的按钮名称必须保持一致
					2. value 属性 
						设置当前控件的值，最终提交给服务器
					3. checked 属性
						设置预选中状态 可以省略属性值，也可以使用"checked" 作为值
			3. 隐藏域和文件选择框
				1. 隐藏域
					作用 ：需要提交给服务器但是却不需要呈现给用户的数据，都可以放在隐藏域中
					语法 ：<input type="hidden">
					属性 ：
						1. name 控件名称
						2. value 控件的值
				2. 文件选择框
					作用 ： 选择文件上传，发送给服务器
					语法 ：
						<input type="file">
					属性 ：
						name 定义控件名称
			4. 下拉选择框
				<select name="province">
					<option value="hebei">河北省</option>
					<option value="heilongjiang">黑龙江省</option>
					<option value="hunan">湖南省</option>
				</select>
				假设用户选择河北省，在使用get方式提交数据时，URL后拼接的数据应为
				province=hebei
			5. 文本域
				支持用户输入多行文本
				语法 ：
					<textarea></textarea>
				属性 ：
					1. name 控件名称
					2. cols 指定文本域默认显示的列数，一行中能显示的英文字符量，中文减半
					3. rows 指定文本域能够显示的行数
				注意 ：文本域可以由用户调整大小
			6. 按钮
				1. 提交按钮
					<input type="submit">
					将表单数据发送给服务器
				2. 重置按钮
					<input type="reset">
					重置表单，将表单内容恢复到初始化状态
				3. 普通按钮
					<input type="button" value="点击">
					可以绑定自定义事件
					按钮中的value属性值实际上是定义按钮的显示文本
				4. <button>按钮显示文本</button>
					注意 ：
						1. 按钮标签可以在任何地方使用，不局限在form 表单中使用
						2. 按钮标签使用在form中，默认具有提交功能，等同于input submit
						3. 可以添加属性type 取值 submit / reset / button 进行区分 （非必填）
						4. 在表单外作为普通按钮使用时，需要通过JS 动态绑定事件
			7. 特殊用法
				label for ID
				语法 ：
					<label for="male">男</label>
					<input type="radio" name="gender" value="male" id="male">
				使用label标签包裹表单控件要显示的文本信息，为label标签添加for属性，属性值与所要绑定的表单控件的ID属性值保持一致，实现文本与控件的绑定






