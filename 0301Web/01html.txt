赵蒙蒙
g-zhaomm@tedu.cn

Web : HTML CSS Javascript
------------------------------------------
1. WEB
	1. 什么是WEB
		Web就是网页，是一种基于B/S的应用程序
		B : Browser 浏览器
		S ：Server 服务器
		---------
		C ：Client 客户端
		S ：Server 服务器
	2. Web 组成
		浏览器 ：代替用户向服务器发送请求
		服务器 ：接收用户请求并响应
		通信协议 ：规范数据在网络中是如何打包即传递的
			http : HyperText transfer protocal
			超文本传输协议
	3. Web 服务器
		1. 作用 ：
			接收用户请求并响应
			存储Web信息
			具备安全性功能
		2. 产品 ：
			1. Apache
			2. Tomcat
			3. IIS - Internet Information Service
			4. Nginx
			...
		3. 技术
			1. JSP - Java Sever Page
			2. PHP
			3. ASP.net
			4. Python Web (Django Flask...)
	4. Web 浏览器
		1. 作用
			代替用户向服务器发送请求
			作为响应数据的解释引擎，向用户呈现界面
		2. 主流浏览器产品
			根据浏览器的内核/引擎进行划分
			1. Microsoft IE
			2. Google    Chrome
			3. Mozilla   FireFox
			4. Apple	 Safari
			5. Opera	 Opera
			浏览器引擎
				1. 渲染引擎 -解析HTML,CSS,控制页面的渲染效果
				2. JS引擎 - 解释网页脚本文件
		3. 前端开发技术
			HTML CSS JavaScript
2. HTML概述
	1. HTML介绍
		1. 什么是HTML
			HyperText Markup language
			超文本    标记   语言
			作用 : 书写网页结构
		2. 超文本
			具备特殊功能的文本就是超文本
			et :
				普通文本 a : 普通字符
				超级文本 a : 表示超链接功能

				普通文本 b : 普通字符
				超级文本 b : 表示加粗功能
		3. 标记
			也叫标签，主要是用来标记网页中的内容，以实现网页的布局和JS操作
	2. HTML 在计算机中的表现
		所有的网页文件在计算机中都是以.html /.htm文件存储的
		开发工具 ：
			1. 记事本
			2. Editplus , Dreamweaver
			3. sublime , Webstorm ,Hbuilder ,VSCode, Atom...
		运行工具 ：
			Chrome 浏览器
		调试工具 ：
			开发者工具，F12 打开
3. HTML 基础语法
	1. 标签/标记
		在网页中具有特殊功能的符号
		1. HTML 中所有的标签都以<>为标志，区分普通文本
		2. 标签分类
			1. 双标签 ：成对出现，有开始有结束
				<开始标签> 标签内容 </结束标签>
				et :
					<h1>一级标题</h1>
			2. 单标签 ：只有开始标签，没有结束标签，可以手动添加/表示结束
				<标签名>
				<标签名/>
				et :
					<br> 换行标签--等同于 <br/>
					<hr> 水平线 -- 等同于<hr/>
		3. 标签嵌套
			1. 在成对的标签中出现其他标签
				超链接标签 ：<a>首页</a>
				文本加粗标签 ：<b>首页</b>
				---加粗的超链接文本---
				<a>
					<b>首页</b>
				</a>
				<b>
					<a>首页</a>
				</b>
			2. 嵌套结构中，外层元素称为父元素，内层元素称为子元素
		4. 文档结构
			1. 新建文件，保存为.htm /.html格式
			2. 书写一对html标签 <html></html>
			3. 在html标签中嵌套一对 head 标签
			4. 在html标签中嵌套一对 body 标签
			5. 为body标签添加文本内容，内容不限
		5. 书写规范
			1. HTML不区分大小写 <HTML></Html>
				推荐使用小写
			2. 保持适当缩进，增强代码可读性
	2. 标签属性
		标签属性主要用来修饰标签的显示效果
		语法 ：
			1. 属性由属性名和属性值组成
				属性名="属性值"
			2. 属性的声明必须写在开始标签中
				<开始标签 属性名='属性值'>..</结束标签>
			3. 每个标签都可以设置多个属性，属性之间使用空格隔开
				<开始标签 属性名='属性值' 属性名='属性值' 属性名='属性值'>..</结束标签>
			4. 练习
				在body标签中添加一对p标签，内容不限；
				为p标签增加属性algin,取值 center
				为p标签增加属性id,取值 p1
	3. HTML 注释
		<!--
			注释内容
		-->
		注意 ： 
			1. 注释不能写在标签里的
				错误 ：
					<p <!-- -->></p>
			2. 注释不能嵌套
	4. HTML 中的换行于空格
		HTML文档会忽略掉多余的空格，只显示为一个空格，如果需要显示多个空格或者 < > ，都需要使用特殊符号代替
4. HTML结构组成
	1. 文档的类型声明
		<!doctype html> h5的声明方式
		作用 ： 告诉浏览器当前使用的HTML版本，以便浏览器能正确解析HTML标签和渲染样式
		书写位置 ： 文档最开始位置
	2. 文档的开始和结束
		1. 在文档类型声明之后，使用一对<html></html>标签标示文档的开始和结束
		2. 在HTML标签中，包含两对子元素
			<html>
				<head></head>
				<body></body>
			</html>
			<head>标签标示网页的头部信息，包含网页的标题，选项卡的图标，网页的关键字，作者，描述等信息，还可以引入外部的资源文件
			<body>标签表示网页的主体信息，网页所呈现的内容都要写在body里
		3. <head>标签中包含的子元素
			1. 设置网页的标题
				<title>我的第一个网页</title>
			2. 设置网页的字符编码
				<meta charset="utf-8">
				浏览器按照utf-8的编码方式解析网页
5. 文本相关的标签
	1. 字符实体（具有特殊意义的符号）
		1. &nbsp; 表示一个空格
		2. &lt;   表示小于号 <
		3. &gt;   表示大于号 >
		4. &copy; 表示版权符号
		5. &yen;  表示人民币符号¥
	2. 文本样式标记
		1. 斜体显示文本 ：<i></i>
		2. 文本添加下划线 ： <u></u>
		3. 文本加粗效果 ：<b></b>
		4. 文本添加删除线 ：<s></s>
		5. 上标显示文本 ： <sup></sup>
		6. 下标显示文本 ： <sub></sub>
		练习 ：
			这是一段有加粗，斜体，删除线，下划线，上标和下标的文本
		特点 ：这些标签可以与其他的标签或文本共行显示
	3. 标题标签
		1. 作用 
			以不同的文字大小和加粗方式显示文本
		2. 语法
			<hn></hn> n取值 1- 6，字体大小是逐级递减的
			<h1></h1> ：一级标题
			...
			<h6></h6> : 六级标题
			练习 ：
				咏鹅
				骆宾王
				鹅 ，鹅，鹅，
				曲项向天歌，
				白毛浮绿水，
				红掌拨清波。
			特点 ：
				1. 会改变文字的大小并且具有加粗效果
				2. 每个标题都会具备垂直的空白距离
				3. 每个标题都独占一行，不与其他元素共行显示
				4. 每个标题都可以添加属性 align
					取值 ：left / center / right
					设置文本的水平对齐方式，默认居左对齐
	4. 段落标签
		1. 作用
			突出显示一段文本，每段文本都独占一行或一块，不予其他元素共行显示，并且也具备垂直的空白距离
		2. 语法
			<p></p>
			属性 align 设置文本的水平对齐方式
			取值 left / center / right
	5. 格式标签
		换行标签 <br> 等同于 <br/>
		水平线标签 <hr> 等同于 <hr/>
	6. 分区标签
		1. 块分区
			标签 ：<div></div>
			作用 ：划分页面结构，配合CSS实现网页布局
			特点 ：独占一行显示（独占一块）
		2. 行内分区元素
			标签 ：<span></span>
			作用 ：设置同一行文本的不同样式（结合CSS）
			特点 ：可以与其他元素或文本共行显示，允许在一行文本中使用多个span元素
	7. 标签分类
		1. 块级元素
			只要在网页中是独占一行，不予其他元素共行显示的元素都是块级元素，简称块元素。例如 ：h1 h2 h3 h4 h5 h6,p,div...
			作用 ：都可以做布局
			特点 ：都可以添加algin属性，设置内容的水平对齐方式
		2. 行内元素 / 内联元素
			可以与其他元素共行显示的元素
			例如 ：i b u s sub sup span
6. 列表标签
	1. 作用
		按照从上到下的方式来排列数据
		并且能够显示项目符号在数据的前面
	2. 列表的组成
		1. 列表的类型
			1. 有序列表 <ol></ol> (ordered list)
				默认是按照数字排列
			2. 无序列表 <ul></ul> (unordered list)
				默认以实心原点作为标识
		2. 列表项
			列表中的每一条数据都是一个列表项
			语法 ：<li></li>
			注意 ：列表项要嵌套在列表标签中使用
			et :
				<ol>
					<li>Java</li>
					<li>PHP</li>
					<li>Python</li>
				</ol>
			练习 ：
				1. 创建新的HTML文件
				2. 搭建网页结构
				3. 在body中创建有序列表，分别展示四大名著
				4. 再创建一个无序列表，展示四大天王
		3. 列表属性
			1. 有序列表 --ol
				1. type属性 ：设置项目符号
					取值 ：
						1. 1 ：按照数字排列显示，默认值
						2. a : 按照小写字母顺序排列
						3. A ：按照大写字母排列
						4. i : 按照罗马数字排列
						5. I : 按照罗马数字排列
					罗马数字 ：i ii iii iv v vi..
				2. start属性 ：设置从第几个字符开始排列
					取值 ：数字
			2. 无序列表 -ul
				1. type属性 ：设置项目符号
					取值 ：
						1. disc 实心圆点（默认）
						2. circle 空心圆点
						3. square 实心方块
						4. none 不显示项目符号


		4. 列表嵌套
			在一个列表中又出现了其他的列表
			<ul>
				<li>
					列表属性
					<ol>
						<li>type属性</li>
						<li>start属性</li>
					</ol>
				</li>
			</ul>
			每一部名著中都列出三个主要人物
			1. 水浒传
				1. 武松
				2. 西门庆
				3. 潘金莲
			2. 西游记
				1. 大师兄
				2. 二师兄
				3. 沙师弟
7. 图像与超链接标签
	1. URL
		Uniform Resource Locator
		统一资源定位符 ：用来标识网络中资源的位置，俗称路径
		URL 组成 ：协议 域名 文件目录及文件名
		URL分类 ：
			1. 绝对路径
				从根目录开始查找
				常用于网络文件路径
				et :
					访问网络资源
					http://www.baidu.com
					http://www.baidu.com/img/logo.png
			2. 相对路径
				从当前文件所在的文件夹开始查找
			3. 根相对路径 （了解）
				从Web程序所在的根目录开始查找资源文件
			注意 ：
				1. 网络URL中不能出现中文
				2. URL是严格区分大小写的
	2. 图像标签
		1. 在网页中插入一张图片
		2. 语法 ：<img>
		3. 属性 ：
			1. src :指定要显示的图片路径
			2. width ：设置图片的宽度，以像素px为单位，也可以省略单位
			3. height ：设置图片的高度
				注意 : src 为必填属性，宽高可以省略，省略宽高的话，图片将以原始尺寸显示在网页中
			4. title ：用来设置图片的标题，当鼠标悬停在图片上方时出现
			5. alt : 用来设置图片加载失败之后的提示文本

复习：
1. 文档基本结构
	<!doctype html>
	<html>
		<head>
			<title></title>
			<meta charset="utf-8">
		</head>
		<body>
			网页主体
		</body>
	</html>
2. 常用标签
	1. 标题标签 h1 - h6
	2. 段落标签 p
	3. 加粗 b 斜体 i 下划线 u 删除线 s 上标 sup 下标 sub
	4. 换行 br 水平线 hr
	5. 块分区 div 行内分区 span
	6. 有序列表 ol 无序列表 ul 列表项 li
		<ol>
			<li>
				<ul>
					<li></li>
				</ul>
			</li>
		</ol>
	7. 图片 <img src="">
	8. 标签分类
		1. 块元素 h1 - h6 p div ul ol li
			特点 独占一行，不予其他元素共行显示
		2. 行内元素 span i b u s sub sup
			特点 可以与其他元素共行显示
-------------------------------------------------
1. 超链接标签
	1. 什么是超链接标签
		能够实现从当前文件跳转到其他文件的标签
	2. 语法
		<a>超链接文本</a>
		标签属性 ：
			1. href :必填属性，指定链接地址，以路径形式给出,#表示当前页，不会发生页面刷新操作，如果属性为"",也表示当前页，但是包含了网络请求，相当于刷新页面。
			2. target :可选属性，设置目标文件的打开方式
				属性值 ：
					1. _self :默认值，表示在当前窗口打开
					2. _blank :表示新建窗口打开
	3. 锚点链接
		链接到当前文件的指定位置
		语法 ：
			1. 设置锚点
				<a name="anchor1"></a>
			2. 设置跳转
				<a href="#anchor1">早年经历</a>
2. 表格
	1. 语法
		1. 标签介绍
			表格标签 ：<table></table>
			行 标 签 ：<tr></tr> ->table row
			单元格标签 ：<td></td> ->table data
		2. 创建顺序
			1. 创建表格标签
			2. 在表格标签中嵌套行标签，每一个 tr 就代表一行
			3. 在行标签中创建单元格标签，用来存放数据
			et :
				<table>
					<tr>
						<td>姓名</td>
						<td>年龄</td>
						<td>性别</td>
					</tr>
				</table>
	2. 标签属性
		1. table 属性
			1. border ：设置边框，取值以px为单位的数值（px可以省略）
			2. width ：设置宽度
			3. height ：设置高度
			4. align ：设置表格在其父元素中的水平对齐方式
			5. cellpadding : 设置单元格的内边距（内容与边框之间的距离），取值为px单位的数值
			6.  cellspacing : 设置单元格的外边距（单元格与单元格之间的距离，或者单元格与表格边框之间的距离），取值像素为单位的数值
			7. bgcolor : 设置表格的背景颜色，取值可以是英文的颜色名称
		2. tr 标签属性
			1. bgcolor : 设置当前行的背景颜色
			2. align ：设置当前行中内容的水平对齐方式
				取值 ： left / center / right
			3. valign :设置当前行内容的垂直对齐方式
				取值 ：top / middle / bottom,默认垂直居中
		3. td 标签属性
			1. width 设置单元格的宽度
			2. height 设置单元格的高度
			3. align 单元格内容的水平对齐方式
			4. valign 单元格内容的垂直对齐方式
			5. bgcolor 单元格的背景颜色
	3. 单元格合并（重点）
		是单元格独有的属性 colspan rowspan
		1. 单元格的跨列合并
			从当前单元格的位置开始，横向向右合并几个单元格
			colspan = "3" ->跨3列进行合并(包含自身)
		2. 单元格的跨行合并
			从当前的单元格开始，纵向向下合并单元格
			rowspan = "3" ->向下跨3行合并单元格
		注意 ：一旦发生单元格合并，
			跨列合并，要删除当前行中多余的单元格
			跨行合并，要删除其后行中多余的单元格
			始终保持表格结构完整
	4. 行分组
		表格结构
		1. 行分组
			允许将表格中的一行或者是若干行划分为一组，便于管理
		2. 语法
			1. 表头行分组
				<thead>
					<tr>
						<td></td>
					</tr>
				</thead>
			2. 表尾行分组
				<tfoot>
					<tr>
						<td></td>
					</tr>
				</tfoot>
			3. 表主体信息
				<tbody>
					<tr>
						<td></td>
					</tr>
				</tbody>
			注意 ：<thead> <tfoot> <tbody>可以省略，默认情况下，所有的行都会被自动添加到 tbody 中
				如果需要手动添加行分组，建议按照 thead  tfoot tbody的顺序书写

3. 表单
	1. 用于接收用户的数据并且提交给服务器
		表单二要素
			1. form 表单元素
				收集用户信息并发送给服务器
			2. 表单控件 （重点）
				提供了能够跟用户交互的可视化组件
	2. form 元素
		1. 注意 ： form元素本身是不可见的，却不能省略，因为数据的提交功能要由 form 元素完成
		2. 语法 ：
			<form>
				表单控件
			</form>
		3. form 标签属性
			1. action 
				指定数据提交的目的地址
			2. method 
				数据请求方式 get /post 
				默认为get方式提交
				1. get （默认值）
					通常用于向服务器端获取数据
					特点 ：
						1. 提交的数据会以参数的形式拼接在URL后面
						2. 安全性较低
						3. 提交数据最大为2KB
				2. post
					将数据提交给服务器处理
					特点 ：
						1. 隐式提交，看不到提交数据
						2. 安全性较高
						3. 没有数据大小限制
	3. 表单控件（重点）
		1. 作用
			提供与用户交互的可视化组件
			注意 ： 只有放在表单元素中的表单控件才允许被提交
		2. 分类
			1. 文本框和密码框
				语法 ：
					文本框 <input type="text">
					密码框 <input type="password">
				属性 ：
					1. name 属性 定义当前控件的名称，缺少的话无法提交
					 name = "uname"
					 uname=zhangsan
					2. value 属性，要提交给服务器的值，同时也是默认显示在控件上的值
					3. maxlength 用来限制用户输入的最大字符数
					4. placeholder 用户输入之前显示在框中的提示文本
			2. 单选框和复选框
				单选按钮 <input type="radio">
				复选框   <input type="checkbox">
				属性 ：
					1. name
						定义控件名称，还起到分组的作用，一组中的按钮名称必须保持一致
					2. value 属性 
						设置当前控件的值，最终提交给服务器
					3. checked 属性
						设置预选中状态 可以省略属性值，也可以使用"checked" 作为值
			3. 隐藏域和文件选择框
				1. 隐藏域
					作用 ：需要提交给服务器但是却不需要呈现给用户的数据，都可以放在隐藏域中
					语法 ：<input type="hidden">
					属性 ：
						1. name 控件名称
						2. value 控件的值
				2. 文件选择框
					作用 ： 选择文件上传，发送给服务器
					语法 ：
						<input type="file">
					属性 ：
						name 定义控件名称
			4. 下拉选择框
				<select name="province">
					<option value="hebei">河北省</option>
					<option value="heilongjiang">黑龙江省</option>
					<option value="hunan">湖南省</option>
				</select>
				假设用户选择河北省，在使用get方式提交数据时，URL后拼接的数据应为
				province=hebei
			5. 文本域
				支持用户输入多行文本
				语法 ：
					<textarea></textarea>
				属性 ：
					1. name 控件名称
					2. cols 指定文本域默认显示的列数，一行中能显示的英文字符量，中文减半
					3. rows 指定文本域能够显示的行数
				注意 ：文本域可以由用户调整大小
			6. 按钮
				1. 提交按钮
					<input type="submit">
					将表单数据发送给服务器
				2. 重置按钮
					<input type="reset">
					重置表单，将表单内容恢复到初始化状态
				3. 普通按钮
					<input type="button" value="点击">
					可以绑定自定义事件
					按钮中的value属性值实际上是定义按钮的显示文本
				4. <button>按钮显示文本</button>
					注意 ：
						1. 按钮标签可以在任何地方使用，不局限在form 表单中使用
						2. 按钮标签使用在form中，默认具有提交功能，等同于input submit
						3. 可以添加属性type 取值 submit / reset / button 进行区分 （非必填）
						4. 在表单外作为普通按钮使用时，需要通过JS 动态绑定事件
			7. 特殊用法
				label for ID
				语法 ：
					<label for="male">男</label>
					<input type="radio" name="gender" value="male" id="male">
				使用label标签包裹表单控件要显示的文本信息，为label标签添加for属性，属性值与所要绑定的表单控件的ID属性值保持一致，实现文本与控件的绑定

复习 ：
1. 表格
	1. 语法
		<table>
			<tr>
				<td></td>
			</tr>
		</table>
	2. 单元格合并
		colspan : 跨列合并
		rowspan :跨行合并
		注意 ：
			1. 这两个属性是 td 的属性
			2. 多余的单元格要删掉
	3. 表格结构
		<thead>
			<tr>
				<td></td>
			</tr>
		</thead>
		<tfoot></tfoot>
		<tbody></tbody>

		结构化标签只有在需要做行分组的时候再使用，默认情况下，表格中的内容都会自动添加到tbody中
2. 表单
	1. 语法
		<form action="" method=""></form>
	2. 表单控件
		1. 文本框和密码框
			<input type="text" name="" maxlength="" placeholder="">
			<input type="password" name="">
		2. 单选按钮和复选框
			<input type="radio" name="" value="" checked>
			<input type="checkbox" name="" value="">
		3. 按钮
			<input type="submit" value="" name="">
			<input type="reset">
			<input type="button" value="">
			按钮标签
			<button>按钮显示文本</button>
		4. 隐藏域和文件选择框
			<input type="hidden" value="" name="">
			<input type="file" name="">
-----------------------------------------------------










